<apex:page standardController="Campaign" extensions="CampaignListEditor_CTRL" title="{!$Label.CampaignToolsListEditorTitle}" standardStylesheets="false" docType="html-5.0">
        <apex:includeLightning />

        <style type="text/css">
            html body.sfdcBody {
                padding: 0 !important;
            }
        </style>

        <!-- start with a spinner here until lightning loads -->
        <div class="slds" id="initialSpinner">
            <div class="slds-spinner_container" style="z-index:999;" > <!-- fixes bug on some browsers where z-order from SLDS was an expression with an error -->            
                <div class="slds-spinner--brand slds-spinner slds-spinner--medium" style="position:fixed;top:40%;" aria-hidden="false" role="alert">
                    <div class="slds-spinner__dot-a"></div>
                    <div class="slds-spinner__dot-b"></div>
                </div>
            </div>  
        </div>

        <div id="pageMessages"></div>

        <div class="slds">
            <div id="lightning" class="slds-container--fluid slds-p-around--medium"/>
        </div>

        <script>

            function getNamespace() {

                var nsPrefix = '{!namespace}';

                if (nsPrefix === '') {
                    nsPrefix = 'c';
                }

                return nsPrefix;
            }

            function createComponents(nsPrefix) {
                var campaignListEditorCmp = nsPrefix + ':CampaignListEditor';
                var pageMessagesCmp = nsPrefix + ':PageMessages';

                $Lightning.createComponent(
                    pageMessagesCmp,
                    {
                        useToast: {!IF(OR($User.UIThemeDisplayed == 'Theme4d', $User.UIThemeDisplayed == 'Theme4t'), 'true', 'false')},
                        nsPrefix: nsPrefix
                    },
                    "pageMessages",
                    function (component) {}
                );

                $Lightning.createComponent(
                    campaignListEditorCmp,
                    {
                        campaignId : '{!Campaign.Id}',
                        campaignName : '{!Campaign.Name}',
                        campaignsURL : '{!URLFOR($Action.Campaign.Tab, $ObjectType.Campaign)}',
                        campaignsLabel : '{!$ObjectType.Campaign.LabelPlural}',
                        rootSegmentId: '{!Campaign.Campaign_List__c}',
                        nsPrefix: nsPrefix
                    },
                    "lightning",
                    function(component) {
                        // hide our startup spinner
                        document.getElementById('initialSpinner').style.display = 'none';
                    }
                );
            }

            function createApp(nsPrefix) {
                var campaignListEditorApp = nsPrefix + ':CampaignListEditorApp';
                $Lightning.use(
                    campaignListEditorApp,
                    function () {
                        createComponents(nsPrefix);
                    }
                );
            }

            function init() {
                var nsPrefix = getNamespace();
                createApp(nsPrefix);
            }

            if (document.readyState !== 'loading') {
                init();
            } else {
                document.addEventListener('DOMContentLoaded', init);
            }
        </script>

    <!-- These labels are referenced in various parts of the CT ui.  We need to
    include a reference to them somewhere, otherwise the packaging spider won't
    know that they are dependencies.  This is ugly, but it is the currently
    recommended way to get the spider to package labels. -->
    <apex:outputText value="{!$Label.CampaignToolsListEditorAddGroup}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorAddSource}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorAllStatus}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorAndJoin}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorCampaignName}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorCampaignType}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorCancel}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorCloseModal}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorDelete}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorEmptyIdColumn}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorExcludes}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorFindCampaign}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorFindReport}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorMethodException}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorOrJoin}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorReportColumn}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorReportName}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorReportType}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorSave}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorSaveEmptyGroup}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorSaveError}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorSaveNoColumn}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorSaveNoIncludes}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorSaveNoSource}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorSaveSuccessful}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorSelectIdColumn}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorSelectSourceType}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorSourceType}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorStatus}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorTitle}" rendered="false"/>
    <apex:outputText value="{!$Label.CampaignToolsListEditorYouAreHere}" rendered="false"/>
</apex:page>